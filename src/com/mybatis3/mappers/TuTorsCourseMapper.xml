<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis3.mappers.TuTorsCourseMapper">

<!--第一种： 使用内嵌结果的ResultMap 实现一对多映射 -->
<!--课程别名，返回课程结果集  -->
<resultMap type="Course" id="CourseResult">
<id property="cid" column="cid"></id>
<result property="cname" column="cname"/>
<result property="desp" column="desp"/>
<result property="start_date" column="start_date"/>
<result property="end_date" column="end_date"/>
</resultMap>
<resultMap type="Tutors" id="TutorsResult">
<id property="tid" column="tid"/>
<result property="name" column="name"/>
<result property="email" column="email"/>
<result property="address" column="address"/>
<collection property="course" resultMap="CourseResult"></collection>
</resultMap> 


<!--第二种： 使用嵌套select的ResultMap 实现一对多映射 -->
<!-- 
<resultMap type="Course" id="CourseResult">
<id property="cid" column="cid"></id>
<result property="cname" column="cname"/>
<result property="desp" column="desp"/>
<result property="start_date" column="start_date"/>
<result property="end_date" column="end_date"/>
</resultMap>
<resultMap type="Tutors" id="TutorsResult">
<id property="tid" column="tid"/>
<result property="name" column="name"/>
<result property="email" column="email"/>
<result property="address" column="address"/>
property="course" 讲师表中的课程bean  column="tid" 讲师表主键   select="findCourseById"查找课程表语句
<collection property="course" column="tid" select="findCourseById"></collection>
</resultMap>
根据讲师表主键tid查找课程表
<select id="findCourseById" parameterType="int" resultMap="CourseResult">
select * from Course c where c.tcid=#{tid} 
</select>
查找讲师表 
<select id="findTutorsById"  resultMap="TutorsResult">
select t.tid,t.name,t.email,t.address from tutors t
</select> 
 -->




<!--第一种 ： 一对多查询两张表不要相同的字段名，如果出现最好使用别名，相同字段Mybatis会覆盖  
两个表的主键必须要查出来，不然框架默认使用同一个id，会出现覆盖 -->
<select id="getTutuorsTalkCourse" resultMap="TutorsResult">
select t.tid,t.name,t.email,t.address,c.cid,c.cname,c.start_date,c.end_date from tutors t,course c where t.tid=c.tcid
</select>

<!-- 动态SQL语句   if标签 -->
<select id="getCourseByIf" parameterType="map" resultMap="CourseResult">
select * from course where tcid=#{tid} 
<if test="coursename!=null">
and cname like #{coursename}
</if>
<if test="starttime!=null">
and start_date &gt; #{starttime}
</if>
<if test="endtime!=null">
and end_date &lt; #{endtime}
</if>
</select>

<!-- 动态SQL语句 choose when  otherwise相当于if...else if...else..或if...else... -->
<select id="getCourseByChoose" parameterType="hashmap" resultMap="CourseResult"><!-- 引用上面id为CourseResult -->
select * from course
<choose>
<when test="searchby=='Tutors'">
where tcid=#{tcid}
</when>
<when test="searchby=='CourseName'">
where cname like #{cname}
</when>
<otherwise>
where start_date >=sysdate
</otherwise>
</choose>
</select>

<!--动态查询SQL语句  where标签   如果 WHERE 子句以
AND 或者 OR 打头，则打头的 AND 或 OR 将会被移除。 -->
<select id="searchCourseByWhere" parameterType="map" resultMap="CourseResult">
select * from course
<!--select * from course where 1=1 恒成立，避免if成立缺少where  -->
<!-- 
<where>
<if test="tutorsid!=null">
and tcid=#{tutorsid}
</if>
<if test="courseName!=null">
and cname like #{courseName}
</if>
<if test="starttime!=null">
and start_date &gt;#{starttime}
</if>
<if test="endtime!=null">
and end_date &lt;#{endtime}
</if>
</where>
 -->

<!--动态查询SQL语句  trim标签  
这里如果任意一个<if>条件为 true，<trim>元素会插入 WHERE,并且移除紧跟 WHERE 后面的 AND 或 OR -->
<trim prefix="where" prefixOverrides="AND|OR">
<if test="tutorsid!=null">
and tcid=#{tutorsid}
</if>
<if test="courseName!=null">
and cname like #{courseName}
</if>
<if test="starttime!=null">
and start_date &gt;#{starttime}
</if>
<if test="endtime!=null">
and end_date &lt;#{endtime}
</if>
</trim>
</select>

<!-- 动态查询SQL语句  foreach标签   -->
<!-- <select id="getCourseByForeach" parameterType="map" resultMap="CourseResult">
select * from course 
<if test="tutorsid!=null">
<where>
<foreach item="tcid" collection="tutorsid">item属性是别名   collection属性是集合名称
or tcid=#{tcid}
</foreach>
</where>
</if>
</select> -->

<!--in 是等于  -->
<select id="getCourseByForeach" parameterType="map" resultMap="CourseResult">
select * from course 
<if test="tutorsid!=null">
<where>
tcid IN
<foreach item="tcid" collection="tutorsid" open="(" separator="," close=")">
			#{tcid}
</foreach>
</where>
</if>
</select>

<!--此表不可用     更新操作  普通语句更新不能为空，用set标签更新可以选择性更新数据库的数据-->
<update id="updateStuById" parameterType="Student">
update student
<!--通过set标签更新表  -->
<set>
<if test="name!=null">
name=#{name},
</if>
<if test="email!=null">
email=#{email},
</if>
<if test="phone!=null">
phone=#{phone},
</if>
<if test="birth!=null">
birth=#{birth},
</if>
</set>
where id=#{id}
</update>

</mapper>